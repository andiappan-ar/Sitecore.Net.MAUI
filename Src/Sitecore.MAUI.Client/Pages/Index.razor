@page "/"
@using Newtonsoft.Json
@using Sitecore.MAUI.Service.Model
@using Sitecore.MAUI.Service.Service

@if (sitecoreContext != null && sitecoreContext.sitecore.route.placeholders != null)
{
    foreach (var _placeholders in sitecoreContext.sitecore.route.placeholders)
    {
        foreach (var _placeholdersList in _placeholders.Value)
        {
            @if (_placeholdersList != null && _placeholdersList.fields != null)
            {
                <!--Asynchronously load component-->
                <DynamicComponent Type="@Type.GetType("Sitecore.MAUI.Client.Shared." + _placeholdersList.componentName)" 
                Parameters ="GetDynamicComponentModel(_placeholdersList.fields)"/>                
            }
            else
            {
                <h2>dynamicComponent or dynamicComponent.Parameters is null</h2>
            }
        }

    }
}
else
{
    <h2>dynamicComponentRoot or dynamicComponentRoot.componenets is null</h2>
}



@code {

    private SitecoreContext sitecoreContext;

    protected override async Task OnInitializedAsync()
    {
        sitecoreContext = (new ServiceContext()).GetSitecoreContext();       
    }

    private IDictionary<string,object> GetDynamicComponentModel(IDictionary<string,object> fields)
    {
        var result =  new Dictionary<string, object>() { { "DynamicComponentModel", fields } };
        return result;
    }
}


